{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "additionalProperties": false,
  "properties": {
    "affinity": {
      "additionalProperties": true,
      "description": "Set the affinity for the pod.",
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "artifactRoot": {
      "additionalProperties": false,
      "properties": {
        "azureBlob": {
          "additionalProperties": false,
          "properties": {
            "accessKey": {
              "default": "",
              "description": "Azure Cloud Storage Account Access Key for the container",
              "required": [],
              "title": "accessKey",
              "type": "string"
            },
            "connectionString": {
              "default": "",
              "description": "Azure Cloud Connection String for the container. Only onnectionString or accessKey required",
              "required": [],
              "title": "connectionString",
              "type": "string"
            },
            "container": {
              "default": "",
              "description": "Azure blob container name",
              "required": [],
              "title": "container",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Specifies if you want to use Azure Blob Storage Mlflow Artifact Root",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "path": {
              "default": "",
              "description": "Azure blobk container folder. If you want to use root level, please don't set anything.",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "storageAccount": {
              "default": "",
              "description": "Azure storage account name",
              "required": [],
              "title": "storageAccount",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "container",
            "storageAccount",
            "path",
            "connectionString",
            "accessKey"
          ],
          "title": "azureBlob",
          "type": "object"
        },
        "gcs": {
          "additionalProperties": false,
          "properties": {
            "bucket": {
              "default": "",
              "description": "Google Cloud Storage bucket name",
              "required": [],
              "title": "bucket",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Specifies if you want to use Google Cloud Storage Mlflow Artifact Root",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "path": {
              "default": "",
              "description": "Google Cloud Storage bucket folder. If you want to use root level, please don't set anything.",
              "required": [],
              "title": "path",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "bucket",
            "path"
          ],
          "title": "gcs",
          "type": "object"
        },
        "proxiedArtifactStorage": {
          "default": false,
          "description": "Specifies if you want to enable proxied artifact storage access",
          "required": [],
          "title": "proxiedArtifactStorage",
          "type": "boolean"
        },
        "s3": {
          "additionalProperties": false,
          "properties": {
            "awsAccessKeyId": {
              "default": "",
              "description": "AWS IAM user AWS_ACCESS_KEY_ID which has attached policy for access to the S3 bucket",
              "required": [],
              "title": "awsAccessKeyId",
              "type": "string"
            },
            "awsSecretAccessKey": {
              "default": "",
              "description": "AWS IAM user AWS_SECRET_ACCESS_KEY which has attached policy for access to the S3 bucket",
              "required": [],
              "title": "awsSecretAccessKey",
              "type": "string"
            },
            "bucket": {
              "default": "",
              "description": "S3 bucket name",
              "required": [],
              "title": "bucket",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Specifies if you want to use AWS S3 Mlflow Artifact Root",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "path": {
              "default": "",
              "description": "S3 bucket folder. If you want to use root level, please don't set anything.",
              "required": [],
              "title": "path",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "bucket",
            "path",
            "awsAccessKeyId",
            "awsSecretAccessKey"
          ],
          "title": "s3",
          "type": "object"
        }
      },
      "required": [
        "proxiedArtifactStorage",
        "azureBlob",
        "s3",
        "gcs"
      ],
      "title": "artifactRoot",
      "type": "object"
    },
    "backendStore": {
      "additionalProperties": false,
      "properties": {
        "databaseConnectionCheck": {
          "default": false,
          "description": "Add an additional init container, which checks for database availability",
          "required": [],
          "title": "databaseConnectionCheck",
          "type": "boolean"
        },
        "databaseMigration": {
          "default": false,
          "description": "Specifies if you want to run database migration",
          "required": [],
          "title": "databaseMigration",
          "type": "boolean"
        },
        "mysql": {
          "additionalProperties": false,
          "properties": {
            "database": {
              "default": "",
              "description": "mlflow database name created before in the mysql instance",
              "required": [],
              "title": "database",
              "type": "string"
            },
            "driver": {
              "default": "pymysql",
              "description": "mysql database connection driver. e.g.: \"pymysql\"",
              "required": [],
              "title": "driver",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Specifies if you want to use mysql backend storage",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "host": {
              "default": "",
              "description": "MySQL host address. e.g. your Amazon RDS for MySQL",
              "required": [],
              "title": "host",
              "type": "string"
            },
            "password": {
              "default": "",
              "description": "mysql database user password which can access to mlflow database",
              "required": [],
              "title": "password",
              "type": "string"
            },
            "port": {
              "default": 3306,
              "description": "MySQL service port",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "user": {
              "default": "",
              "description": "mysql database user name which can access to mlflow database",
              "required": [],
              "title": "user",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "host",
            "port",
            "database",
            "user",
            "password",
            "driver"
          ],
          "title": "mysql",
          "type": "object"
        },
        "postgres": {
          "additionalProperties": false,
          "properties": {
            "database": {
              "default": "",
              "description": "mlflow database name created before in the postgres instance",
              "required": [],
              "title": "database",
              "type": "string"
            },
            "driver": {
              "default": "",
              "description": "postgres database connection driver. e.g.: \"psycopg2\"",
              "required": [],
              "title": "driver",
              "type": "string"
            },
            "enabled": {
              "default": false,
              "description": "Specifies if you want to use postgres backend storage",
              "required": [],
              "title": "enabled",
              "type": "boolean"
            },
            "host": {
              "default": "",
              "description": "Postgres host address. e.g. your RDS or Azure Postgres Service endpoint",
              "required": [],
              "title": "host",
              "type": "string"
            },
            "password": {
              "default": "",
              "description": "postgres database user password which can access to mlflow database",
              "required": [],
              "title": "password",
              "type": "string"
            },
            "port": {
              "default": 5432,
              "description": "Postgres service port",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "user": {
              "default": "",
              "description": "postgres database user name which can access to mlflow database",
              "required": [],
              "title": "user",
              "type": "string"
            }
          },
          "required": [
            "enabled",
            "host",
            "port",
            "database",
            "user",
            "password",
            "driver"
          ],
          "title": "postgres",
          "type": "object"
        }
      },
      "required": [
        "databaseMigration",
        "databaseConnectionCheck",
        "postgres",
        "mysql"
      ],
      "title": "backendStore",
      "type": "object"
    },
    "extraArgs": {
      "additionalProperties": true,
      "description": "A map of arguments and values to pass to the `mlflow server` command\nKeys must be camelcase. Helm will turn them to kebabcase style.",
      "required": [],
      "title": "extraArgs",
      "type": "object"
    },
    "extraContainers": {
      "description": "Extra containers for the mlflow pod",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraContainers",
      "type": "array"
    },
    "extraEnvVars": {
      "additionalProperties": true,
      "description": "Extra environment variables",
      "required": [],
      "title": "extraEnvVars",
      "type": "object"
    },
    "extraFlags": {
      "description": "A list of flags to pass to `mlflow server` command\nItems must be camelcase. Helm will turn them to kebabcase style.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraFlags",
      "type": "array"
    },
    "extraSecretNamesForEnvFrom": {
      "description": "Extra secrets for environment variables",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraSecretNamesForEnvFrom",
      "type": "array"
    },
    "extraVolumeMounts": {
      "description": "Extra Volume Mounts for the mlflow container",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraVolumeMounts",
      "type": "array"
    },
    "extraVolumes": {
      "description": "Extra Volumes for the pod",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraVolumes",
      "type": "array"
    },
    "fullnameOverride": {
      "default": "",
      "description": "String to override the default generated fullname",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "image": {
      "additionalProperties": false,
      "description": "Image of mlflow",
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "The docker image pull policy",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "repository": {
          "default": "burakince/mlflow",
          "description": "The docker image repository to use",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "",
          "description": "The docker image tag to use. Default app version",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [
        "repository",
        "pullPolicy",
        "tag"
      ],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "Image pull secrets for private docker registry usages",
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingress": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Additional ingress annotations",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "className": {
          "default": "",
          "description": "New style ingress class name. Only possible if you use K8s 1.18.0 or later version",
          "required": [],
          "title": "className",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "description": "Specifies if you want to create an ingress access",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
          "items": {
            "anyOf": [
              {
                "additionalProperties": false,
                "properties": {
                  "host": {
                    "default": "chart-example.local",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "anyOf": [
                        {
                          "additionalProperties": false,
                          "properties": {
                            "path": {
                              "default": "/",
                              "required": [],
                              "title": "path",
                              "type": "string"
                            },
                            "pathType": {
                              "default": "ImplementationSpecific",
                              "description": "Ingress path type",
                              "required": [],
                              "title": "pathType",
                              "type": "string"
                            }
                          },
                          "required": [
                            "path",
                            "pathType"
                          ],
                          "type": "object"
                        }
                      ],
                      "required": []
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [
                  "host",
                  "paths"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "tls": {
          "description": "Ingress tls configuration for https access",
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "className",
        "annotations",
        "hosts",
        "tls"
      ],
      "title": "ingress",
      "type": "object"
    },
    "initContainers": {
      "description": "Init Containers for Mlflow Pod",
      "items": {
        "required": []
      },
      "required": [],
      "title": "initContainers",
      "type": "array"
    },
    "livenessProbe": {
      "additionalProperties": false,
      "description": "Liveness probe configurations. Please look to [here](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes).",
      "properties": {
        "failureThreshold": {
          "default": 5,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "default": 10,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 30,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 3,
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [
        "initialDelaySeconds",
        "periodSeconds",
        "timeoutSeconds",
        "failureThreshold"
      ],
      "title": "livenessProbe",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "String to override the default generated name",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "nodeSelector": {
      "additionalProperties": true,
      "description": "Set the node selector for the pod.",
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "podAnnotations": {
      "additionalProperties": true,
      "description": "Annotations for the pod",
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podSecurityContext": {
      "additionalProperties": true,
      "description": "Security context for all pod",
      "required": [],
      "title": "podSecurityContext",
      "type": "object"
    },
    "readinessProbe": {
      "additionalProperties": false,
      "description": "Readiness probe configurations. Please look to [here](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes).",
      "properties": {
        "failureThreshold": {
          "default": 5,
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "default": 10,
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 30,
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 3,
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [
        "initialDelaySeconds",
        "periodSeconds",
        "timeoutSeconds",
        "failureThreshold"
      ],
      "title": "readinessProbe",
      "type": "object"
    },
    "replicaCount": {
      "default": 1,
      "description": "(int) Numbers of replicas",
      "required": [],
      "title": "replicaCount",
      "type": "integer"
    },
    "resources": {
      "additionalProperties": true,
      "description": "Set the resources requests and limits",
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "securityContext": {
      "additionalProperties": true,
      "description": "Security context for the mlflow container",
      "required": [],
      "title": "securityContext",
      "type": "object"
    },
    "service": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Additional service annotations",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "name": {
          "default": "http",
          "description": "Default Service name",
          "required": [],
          "title": "name",
          "type": "string"
        },
        "port": {
          "default": 5000,
          "description": "Default Service port",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "type": {
          "default": "ClusterIP",
          "description": "Specifies what type of Service should be created",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type",
        "port",
        "name",
        "annotations"
      ],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "additionalProperties": false,
      "properties": {
        "annotations": {
          "additionalProperties": true,
          "description": "Annotations to add to the service account. AWS EKS users can assign role arn from here.\nPlease find more information from here:\nhttps://docs.aws.amazon.com/eks/latest/userguide/specify-service-account-role.html",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a ServiceAccount should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the ServiceAccount to use.\nIf not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "create",
        "annotations",
        "name"
      ],
      "title": "serviceAccount",
      "type": "object"
    },
    "serviceMonitor": {
      "additionalProperties": false,
      "properties": {
        "enabled": {
          "default": false,
          "description": "When set true then use a ServiceMonitor to configure scraping",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "interval": {
          "default": "30s",
          "description": "Set how frequently Prometheus should scrape",
          "required": [],
          "title": "interval",
          "type": "string"
        },
        "labels": {
          "additionalProperties": true,
          "description": "Set labels for the ServiceMonitor, use this to define your scrape label for Prometheus Operator",
          "required": [],
          "title": "labels",
          "type": "object"
        },
        "metricRelabelings": {
          "description": "Set of rules to relabel your exist metric labels",
          "items": {
            "required": []
          },
          "required": [],
          "title": "metricRelabelings",
          "type": "array"
        },
        "namespace": {
          "default": "monitoring",
          "description": "Set the namespace the ServiceMonitor should be deployed",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "targetLabels": {
          "description": "Set of labels to transfer on the Kubernetes Service onto the target.",
          "items": {
            "required": []
          },
          "required": [],
          "title": "targetLabels",
          "type": "array"
        },
        "telemetryPath": {
          "default": "/metrics",
          "description": "Set path to mlflow telemtery-path",
          "required": [],
          "title": "telemetryPath",
          "type": "string"
        },
        "timeout": {
          "default": "10s",
          "description": "Set timeout for scrape",
          "required": [],
          "title": "timeout",
          "type": "string"
        },
        "useServicePort": {
          "default": false,
          "description": "When set true then use a service port. On default use a pod port.",
          "required": [],
          "title": "useServicePort",
          "type": "boolean"
        }
      },
      "required": [
        "enabled",
        "useServicePort",
        "namespace",
        "interval",
        "telemetryPath",
        "labels",
        "timeout",
        "targetLabels",
        "metricRelabelings"
      ],
      "title": "serviceMonitor",
      "type": "object"
    },
    "strategy": {
      "additionalProperties": true,
      "description": "This will set the deployment strategy more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy",
      "properties": {
        "type": {
          "default": "RollingUpdate",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "title": "strategy",
      "type": "object"
    },
    "tolerations": {
      "description": "Set the tolerations for the pod.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    }
  },
  "required": [
    "replicaCount",
    "image",
    "strategy",
    "imagePullSecrets",
    "nameOverride",
    "fullnameOverride",
    "serviceAccount",
    "podAnnotations",
    "podSecurityContext",
    "securityContext",
    "service",
    "backendStore",
    "artifactRoot",
    "extraArgs",
    "extraFlags",
    "extraEnvVars",
    "extraSecretNamesForEnvFrom",
    "ingress",
    "resources",
    "serviceMonitor",
    "nodeSelector",
    "tolerations",
    "affinity",
    "initContainers",
    "extraContainers",
    "extraVolumes",
    "extraVolumeMounts",
    "livenessProbe",
    "readinessProbe"
  ],
  "type": "object"
}
